#ifndef PRESSURE_SENSOR_BMP280_H
#define PRESSURE_SENSOR_BMP280_H
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// pressure_sensor_bmp280.h
// UMSATS 2018-2020
//
// Repository:
//  UMSATS > Avionics 2019
//
// File Description:
//  Control and usage of BMP280 sensor inside of RTOS task.
//
// History
// 2019-03-04 Eric Kapilik
// - Created.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// INCLUDES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "bmp280.h"
#include "stm32f4xx_hal_uart_io.h"
#include "FreeRTOS.h"
#include "task.h"
#include "SPI.h"
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// DEFINITIONS AND MACROS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
#define TIMEOUT 100 // milliseconds

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// ENUMS AND ENUM TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// STRUCTS AND STRUCT TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Keep SPI connection and BMP sensor struct togehter
struct bmp280_sensor_struct{
	struct bmp280_dev* bmp_ptr;
	SPI_HandleTypeDef* hspi_ptr;
};
typedef struct bmp280_sensor_struct bmp280_sensor;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// CONSTANTS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// FUNCTION PROTOTYPES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Task for testing the BMP280 sensor.
//    - initializes sensor
//    - read data & print to UART screen cycle
//
// Returns:
//  VOID
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
void vTask_pressure_sensor_280(void *pvParameters);

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Initialize BMP280 sensor and be ready to read via SPI 4w.
//  Also performs unit self test.
// *Based off of https://github.com/BoschSensortec/BMP280_driver/blob/master/examples/basic.c
//
// Returns:
//  0 if no errors.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
int8_t init_bmp280_sensor(bmp280_sensor* bmp280_sensor_ptr);

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Captures pressure reading (32 bit precision) from BMP280 sensor.
// NOTE:
//  The sensor that this function will get measurements from is the one that was passed in via init_bmp280_sensor
//
// Returns:
//  uint32_t - 32 bit precision pressure measurement
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
uint32_t bmp280_get_press();

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Captures temperature reading (32 bit precision) from BMP280 sensor.
// NOTE:
//  The sensor that this function will get measurements from is the one that was passed in via init_bmp280_sensor
//
// Returns:
//  uint32_t - 32 bit precision temperature measurement
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
int32_t bmp280_get_temp();

#endif // PRESSURE_SENSOR_BMP280_H
